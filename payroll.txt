#UC1 create a payroll service database.
mysql> create database payrollservice;
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| addressbook        |
| addressbookservice |
| information_schema |
| mysql              |
| payrollservice     |
| performance_schema |
| sys                |
+--------------------+

#UC2 : create employeepayroll Table to manage employee payrolls.
CREATE TABLE employeepayroll
(
  id              INT  NOT NULL  AUTO_INCREMENT, # Unique ID for the record
  name            VARCHAR(150) NOT NULL,                
  salary           INT NOT NULL,               
  start          DATE NOT NULL,                       
  PRIMARY KEY     (id)                                 
);

#UC3: Insert values in employeepayroll TABLE.
INSERT INTO employeepayroll ( name, salary, start) VALUES
  ( "Shalini",800000 , '2020-03-04' ),
  ( "Ragini", 8000, '2020-08-06' ),
  ( "Aman", 60000, '2020-03-12' );

#UC4: retrieve the data of employeepayroll.
 SELECT * FROM employeepayroll;
r
#UC5: retrieve the salary of  particular employee who have joinednin a particular data range 
	from the employeepayroll.
SELECT salary FROM employeepayroll WHERE name = 'Shalini' ; // show shalini salary
+--------+
| salary |
+--------+
| 800000 |
+--------+
mysql> SELECT salary FROM employeepayroll WHERE start BETWEEN CAST('2018-01-01' AS DATE) AND DATE(NOW());
+--------+
| salary |
+--------+
| 800000 |
|   8000 |
|  60000 |
+--------+

# UC6 : ADD gender
ALTER TABLE employeepayroll  ADD gender CHAR(1) AFTER name;
UPDATE employeepayroll set gender = 'F' where name ='Shalini' or name ='Ragini';

#UC7: Find sum, Avg, min, max, and no of male and female::
mysql> SELECT SUM(salary) FROM employeepayroll where gender = 'F' GROUP BY GENDER;
+-------------+
| SUM(salary) |
+-------------+
|      808000 |
+-------------+
1 row in set (0.05 sec)

mysql> SELECT AVG(salary) FROM employeepayroll where gender = 'F' GROUP BY GENDER;
+-------------+
| AVG(salary) |
+-------------+
|      404000 |
+-------------+
1 row in set (0.00 sec)

mysql> SELECT MIN(salary) FROM employeepayroll where gender = 'F' GROUP BY GENDER;
+-------------+
| MIN(salary) |
+-------------+
|        8000 |
+-------------+
1 row in set (0.05 sec)

mysql> SELECT MAX(salary) FROM employeepayroll where gender = 'F' GROUP BY GENDER;
+-------------+
| MAX(salary) |
+-------------+
|      800000 |
+-------------+
1 row in set (0.00 sec)

mysql> SELECT COUNT(gender) FROM employeepayroll where gender = 'F' GROUP BY GENDER;
+---------------+
| COUNT(gender) |
+---------------+
|             2 |
+---------------+

#UC8: Store information like employee phone, address, and department.
ALTER TABLE employeepayroll ADD phone_number VARCHAR(200) AFTER name;
 ALTER TABLE employeepayroll ADD address VARCHAR(200) AFTER phone_number;
 ALTER TABLE employeepayroll ADD department VARCHAR(200) NOT NULL AFTER address;
ALTER TABLE employeepayroll ALTER address SET default 'TBD';
mysql> describe employeepayroll;
+--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| id           | int          | NO   | PRI | NULL    | auto_increment |
| name         | varchar(150) | NO   |     | NULL    |                |
| phone_number | varchar(200) | YES  |     | NULL    |                |
| address      | varchar(200) | YES  |     | TBD     |                |
| department   | varchar(200) | NO   |     | NULL    |                |
| gender       | char(1)      | YES  |     | NULL    |                |
| salary       | double       | NO   |     | NULL    |                |
| start        | date         | NO   |     | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+

#UC9: Ability to extend employeepayroll  to have basic pay , deductions, taxable pay Income tax, NetPay

mysql> ALTER TABLE employeepayroll RENAME COLUMN salary TO basic_pay;

mysql> ALTER TABLE employeepayroll ADD deductions DOUBLE NOT NULL AFTER bas

mysql> ALTER TABLE employeepayroll ADD taxable_pay DOUBLE NOT NULL AFTER de

mysql> ALTER TABLE employeepayroll ADD tax DOUBLE NOT NULL AFTER taxable_pa

mysql> ALTER TABLE employeepayroll ADD net_pay DOUBLE NOT NULL AFTER tax;

mysql> describe employeepayroll;
+--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| id           | int          | NO   | PRI | NULL    | auto_increment |
| name         | varchar(150) | NO   |     | NULL    |                |
| phone_number | varchar(200) | YES  |     | NULL    |                |
| address      | varchar(200) | YES  |     | TBD     |                |
| department   | varchar(200) | NO   |     | NULL    |                |
| gender       | char(1)      | YES  |     | NULL    |                |
| basic_pay    | double       | NO   |     | NULL    |                |
| deductions   | double       | NO   |     | NULL    |                |
| taxable_pay  | double       | NO   |     | NULL    |                |
| tax          | double       | NO   |     | NULL    |                |
| net_pay      | double       | NO   |     | NULL    |                |
| start        | date         | NO   |     | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+
12 rows in set (0.03 sec) 

#UC10: make Shalini part of Sales and Marketing department.
	ER Diagram.

mysql> update employeepayroll set department = 'Sales' where name = 'Shalini';
Query OK, 1 row affected (0.11 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> INSERT INTO  employeepayroll(name, department, gender, basic_pay, deductions, taxable_pay, tax, net_pay, start) VALUES
    -> ('Shalini', 'Marketing', 'F', 300000.00, 100000.00, 200000.00, 500000.00, 1500000.00, '2020-01-01');
Query OK, 1 row affected (0.22 sec)

mysql> select * from employeepayroll;
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
| id | name    | phone_number | address | department | gender | basic_pay | deductions | taxable_pay | tax    | net_pay | start      |
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
|  1 | Shalini | NULL         | NULL    | Sales      | F      |    800000 |          0 |           0 |      0 |       0 | 2020-03-04 |
|  2 | Ragini  | NULL         | NULL    |            | F      |      8000 |          0 |           0 |      0 |       0 | 2020-08-06 |
|  3 | Aman    | NULL         | NULL    |            | M      |     60000 |          0 |           0 |      0 |       0 | 2020-03-12 |
|  4 | Terisa  | NULL         | TBD     | Marketing  | F      |    300000 |     100000 |      200000 | 500000 | 1500000 | 2020-01-01 |
|  5 | Shalini | NULL         | TBD     | Marketing  | F      |    300000 |     100000 |      200000 | 500000 | 1500000 | 2020-01-01 |
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
5 rows in set (0.00 sec)
#UC11: Implemented the ER diagram into Payroll Service DB
CREATE TABLE company					
(
 company_id 	INT PRIMARY KEY, 				
 company_name 	VARCHAR(30) NOT NULL
);
mysql> describe company;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| company_id   | int         | NO   | PRI | NULL    |       |
| company_name | varchar(30) | NO   |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
2 rows in set (0.05 sec)
mysql> CREATE TABLE employee
    -> (
    ->  id              INT unsigned NOT NULL AUTO_INCREMENT PRIM
    ->  company_id      INT REFERENCES company(company_id),
    ->  phone_number    VARCHAR(20) NOT NULL,
    ->  address         VARCHAR(50) NOT NULL DEFAULT 'TBD',
    ->  gender  CHAR(1) NOT NULL
    -> );
Query OK, 0 rows affected (1.61 sec)

mysql> describe employee;
+--------------+--------------+------+-----+---------+-----------
| Field        | Type         | Null | Key | Default | Extra
+--------------+--------------+------+-----+---------+-----------
| id           | int unsigned | NO   | PRI | NULL    | auto_incre
| company_id   | int          | YES  |     | NULL    |
| phone_number | varchar(20)  | NO   |     | NULL    |
| address      | varchar(50)  | NO   |     | TBD     |
| gender       | char(1)      | NO   |     | NULL    |
+--------------+--------------+------+-----+---------+-----------
5 rows in set (0.15 sec)

mysql> CREATE TABLE payroll
    -> (
    ->  emp_id  INT REFERENCES employee(id),
    ->  basic_pay       DOUBLE NOT NULL,
    ->  deductions      DOUBLE NOT NULL,
    ->  taxable_pay     DOUBLE NOT NULL,
    ->  tax             DOUBLE NOT NULL,
    ->  net_pay         DOUBLE NOT NULL
    -> );
Query OK, 0 rows affected (0.64 sec)

mysql> describe payroll;
+-------------+--------+------+-----+---------+-------+
| Field       | Type   | Null | Key | Default | Extra |
+-------------+--------+------+-----+---------+-------+
| emp_id      | int    | YES  |     | NULL    |       |
| basic_pay   | double | NO   |     | NULL    |       |
| deductions  | double | NO   |     | NULL    |       |
| taxable_pay | double | NO   |     | NULL    |       |
| tax         | double | NO   |     | NULL    |       |
| net_pay     | double | NO   |     | NULL    |       |
+-------------+--------+------+-----+---------+-------+
6 rows in set (0.00 sec)

mysql> CREATE TABLE department
    -> (
    ->  dept_id         INT PRIMARY KEY,
    ->  dept_name       VARCHAR(50) NOT NULL
    -> );
Query OK, 0 rows affected (1.29 sec)

mysql> describe department;
+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| dept_id   | int         | NO   | PRI | NULL    |       |
| dept_name | varchar(50) | NO   |     | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
2 rows in set (0.07 sec)

mysql> CREATE TABLE employee_department
    -> (
    ->  emp_id  INT REFERENCES employee(id),
    ->  dept_id         INT REFERENCES department(dept_id)
    -> );
Query OK, 0 rows affected (2.00 sec)

mysql> describe employee_department;
+---------+------+------+-----+---------+-------+
| Field   | Type | Null | Key | Default | Extra |
+---------+------+------+-----+---------+-------+
| emp_id  | int  | YES  |     | NULL    |       |
| dept_id | int  | YES  |     | NULL    |       |
+---------+------+------+-----+---------+-------+
2 rows in set (0.00 sec)

mysql>mysql> INSERT INTO company VALUES
    ->          (1,'CompanyA'),
    ->          (2,'CompanyB'),
    ->          (3,'CompanyC');
mysql> select * from company;
+------------+--------------+
| company_id | company_name |
+------------+--------------+
|          1 | CompanyA     |
|          2 | CompanyB     |
|          3 | CompanyC     |
+------------+--------------+
3 rows in set (0.06 sec)
mysql> INSERT INTO employee VALUES                                     
    ->          (101, 1, 'Bill', '9876543210', 'California', 'M' ),
    ->  (102, 1, 'Terisa', '8876543211', 'San Francisco', 'F' ),
    ->  (103, 2, 'Charlie', '7876543212', 'New York', 'M' );

mysql> select * from employee;
+-----+------------+---------------+--------------+---------------+--------+
| id  | company_id | employee_name | phone_number | address       | gender |
+-----+------------+---------------+--------------+---------------+--------+
| 101 |          1 | Bill          | 9876543210   | California    | M      |
| 102 |          1 | Terisa        | 8876543211   | San Francisco | F      |
| 103 |          2 | Charlie       | 7876543212   | New York      | M      |
+-----+------------+---------------+--------------+---------------+--------+
3 rows in set (0.00 sec)

mysql>mysql> INSERT INTO payroll VALUES                                       
    ->          (101,50000,5000,45000,5000,40000),
    ->          (102,20000,2000,18000,3000,15000),
    ->          (103,60000,6000,54000,4000,50000);
Query OK, 3 rows affected (0.37 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select * from payroll;
+--------+-----------+------------+-------------+------+---------+
| emp_id | basic_pay | deductions | taxable_pay | tax  | net_pay |
+--------+-----------+------------+-------------+------+---------+
|    101 |     50000 |       5000 |       45000 | 5000 |   40000 |
|    102 |     20000 |       2000 |       18000 | 3000 |   15000 |
|    103 |     60000 |       6000 |       54000 | 4000 |   50000 |
+--------+-----------+------------+-------------+------+---------+
3 rows in set (0.03 sec)

mysql> INSERT INTO department VALUES                                  
    ->          (201, 'Sales'),
    ->          (202, 'Marketing'),
    ->          (203, 'Logistics'),
    ->          (204, 'Management');
Query OK, 4 rows affected (0.30 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select * from department;
+---------+------------+
| dept_id | dept_name  |
+---------+------------+
|     201 | Sales      |
|     202 | Marketing  |
|     203 | Logistics  |
|     204 | Management |
+---------+------------+
4 rows in set (0.00 sec)

mysql> INSERT INTO employee_department VALUES                  
    ->          (101,203),
    ->          (102,201),
    ->          (102,202),
    ->          (103,204);
Query OK, 4 rows affected (0.75 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select * from employee_department;
+--------+---------+
| emp_id | dept_id |
+--------+---------+
|    101 |     203 |
|    102 |     201 |
|    102 |     202 |
|    103 |     204 |
+--------+---------+
4 rows in set (0.03 sec)

mysql> SELECT gender,COUNT(id) FROM employee                           
    -> GROUP BY gender;
+--------+-----------+
| gender | COUNT(id) |
+--------+-----------+
| M      |         2 |
| F      |         1 |
+--------+-----------+
2 rows in set (0.08 sec)

mysql> SELECT net_pay FROM PAYROLL WHERE emp_id =(
    ->          SELECT id FROM employee where gender = 'F'
    ->          );
+---------+
| net_pay |
+---------+
|   15000 |
+---------+
1 row in set (0.04 sec)

mysql> SELECT SUM(p.net_pay) FROM employee e left join payroll p
    -> on  p.emp_id = e.id
    -> GROUP BY e.gender;
+----------------+
| SUM(p.net_pay) |
+----------------+
|          90000 |
|          15000 |
+----------------+
2 rows in set (0.00 sec)

mysql> SELECT AVG(p.net_pay) FROM employee e left join payroll p
    -> on  p.emp_id = e.id
    -> GROUP BY e.gender;
+----------------+
| AVG(p.net_pay) |
+----------------+
|          45000 |
|          15000 |
+----------------+
2 rows in set (0.02 sec)

mysql> SELECT MAX(p.net_pay) FROM employee e left join payroll p
    -> on  p.emp_id = e.id
    -> GROUP BY e.gender;
+----------------+
| MAX(p.net_pay) |
+----------------+
|          50000 |
|          15000 |
+----------------+
2 rows in set (0.00 sec)

mysql> SELECT MIN(p.net_pay) FROM employee e left join payroll p
    -> on  p.emp_id = e.id
    -> GROUP BY e.gender;
+----------------+
| MIN(p.net_pay) |
+----------------+
|          40000 |
|          15000 |
+----------------+
2 rows in set (0.00 sec)






